name: Amber Script
description: Run arbitrary Amber scripts.
branding:
  color: orange
  icon: code
inputs:
  script:
    description: The script to run
    required: true
  amber-version:
    default: 0.4.0-alpha
  enable-cache:
    description: Whether to cache Amber binaries and the compiled bash scripts
    default: true
  cache-path:
    description: The path to store Amber binaries and the compiled bash scripts
    default: /home/runner/.amber-script-action
  internal-eof-word:
    description: Internal only. Do not use this.
    default: END_OF_GIVEN_AMBER_SCRIPT
runs:
  using: composite
  steps:
    - id: hash-script
      shell: bash
      run: |
        # Make cache key for given script
        {
          echo -n 'hash='
          cat <<${{ inputs.internal-eof-word }} | sha256sum | cut -d' ' -f 1
        ${{ inputs.script }}
        ${{ inputs.internal-eof-word }}
        } >> "$GITHUB_OUTPUT"
    - name: Cache compiled script
      uses: actions/cache@v3
      if: inputs.enable-cache
      with:
        path: ${{ inputs.cache-path }}/dest
        key: amber-script-action-${{ runner.os }}-script-${{ inputs.amber-version }}
    - name: Cache Amber binaries
      uses: actions/cache@v3
      if: inputs.enable-cache
      with:
        path: ${{ inputs.cache-path }}/bin
        key: amber-script-action-${{ runner.os }}-bin-${{ inputs.amber-version }}
    - shell: bash
      run: |
        # Download amber binary
        curl -fsSL https://raw.githubusercontent.com/lens0021/amber-script-action/313f374d9de5a9083d0d960f631ece16bb029482/download_amber.sh | bash
    # TODO: Convert this to amber-script-action.
    # This includes a here-document expression, so hard to convert.
    - shell: bash
      run: |
        # Build the given script
        if [ -e "${{ inputs.cache-path }}/dest/${{ steps.hash-script.outputs.hash }}.sh" ]; then
          echo "::debug::A compiled bash script found. Skip building."
        else
          if [ ! -e "${{ inputs.cache-path }}/bin/amber-${{ inputs.amber-version }}" ]; then
            echo "::error::No both compfiled bash script and Amber binary found after trying to install."
            exit 1
          else
            mkdir -p "${{ inputs.cache-path }}/tmp"
            cat <<${{ inputs.internal-eof-word }} > "${{ inputs.cache-path }}/tmp/${{ steps.hash-script.outputs.hash }}.ab"
        ${{ inputs.script }}
        ${{ inputs.internal-eof-word }}
            mkdir -p "${{ inputs.cache-path }}/dest"
            ${{ inputs.cache-path }}/bin/amber-${{ inputs.amber-version }} build "${{ inputs.cache-path }}/tmp/${{ steps.hash-script.outputs.hash }}.ab" "${{ inputs.cache-path }}/dest/${{ steps.hash-script.outputs.hash }}.sh"
          fi
        fi
    - shell: bash
      run: |
        # Run the compiled script
        bash "${{ inputs.cache-path }}/dest/${{ steps.hash-script.outputs.hash }}.sh"
